<?php

/**
 * Implements template_preprocess_html().
 */
function unl_fourone_preprocess_html(&$variables) {
  $group = unl_fourone_get_current_group();

  // Swap head title variables for group
  if ($group) {
    if (unl_fourone_is_request_group_front()) {
      unset($variables['head_title']['title']);
    }
    $variables['head_title']['name'] = $group->title->value;
  }

  // Set the <title> tag to UNL format: Page Title | Site Name | University of Nebraska–Lincoln
  $moduleHandler = \Drupal::service('module_handler');
  if (!$moduleHandler->moduleExists('metatag')) {
    // Remove Page Title on the front page.
    if (\Drupal::service('path.matcher')->isFrontPage()) {
      unset($variables['head_title_array']['title']);
    }
    // Append University of Nebraska–Lincoln to the end.
    $site_config = \Drupal::config('system.site');
    if ($site_config->get('name') != 'University of Nebraska–Lincoln') {
      $variables['head_title_array'] = array_merge($variables['head_title_array'], array('UNL' => 'University of Nebraska–Lincoln'));
    }
    $variables['head_title'] = implode(' | ', $variables['head_title_array']);
  }

  // If <link rel="home"> has already been set elsewhere (in a Context for example) then return...
  foreach ($variables['page']['#attached']['html_head'] as $key => $element) {
    if ($element[0]["#tag"] == 'link' && isset($element[0]['#attributes']['rel']) && $element[0]['#attributes']['rel'] == 'home') {
      return;
    }
  }

  // ...otherwise add a <link rel="home"> tag with the front page as the href attribute
  $element = array(
    '#tag' => 'link',
    '#attributes' => array(
      'rel' => 'home',
      'href' => $group
        ? $group->toUrl()->toString()
        : \Drupal\Core\Url::fromRoute('<front>', array(), array('absolute' => TRUE))
          ->toString(),
    ),
    '#type' => 'html_tag'
  );
  $variables['page']['#attached']['html_head'][] = array(
    $element,
    'link-rel-home'
  );
}

function unl_fourone_preprocess_page(&$variables) {
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
}

/**
 * Implements hook_page_attachments_alter().
 */
function unl_fourone_page_attachments_alter(&$attachments) {
  $metaToRemove = [
    'system_meta_content_type',
    'viewport',
  ];
  foreach ($attachments['#attached']['html_head'] as $key => $element) {
    if (in_array($element[1], $metaToRemove)) {
      unset($attachments['#attached']['html_head'][$key]);
    }
  }
}

function unl_fourone_js_alter(&$js, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  if (in_array('unl_fourone/amd', $assets->libraries)) {
    $js['themes/unl_fourone/js/amd-enable.js']['weight'] += 999;
  }
}

/**
 * Implements template_preprocess_block().
 */
function unl_fourone_preprocess_block(&$variables) {
  // Add Menu Block class to book navigation block so that they can share CSS.
  if ($variables['plugin_id'] == 'book_navigation') {
    $variables['attributes']['class'][] = 'block-menu-block';
  }
  // Add .wdn-sans-serif to menu blocks.
  if ($variables['plugin_id'] == 'book_navigation' || substr($variables['plugin_id'], 0, 16) == 'block-menu-block' ) {
    $variables['attributes']['classes'][] = 'wdn-sans-serif';
    $variables['title_attributes']['class'][] = 'wdn-sans-serif';
  }

  // Change Site Title to the Group title
  if ($variables['base_plugin_id'] == 'system_branding_block') {
    $group = unl_fourone_get_current_group();
    if ($group) {
      $variables['#cache']['contexts'][] = 'og_group_context';
      $variables['site_name'] = $group->title->value;
      // @todo: this should probably come from a group field
      $variables['site_slogan'] = '';
    }
  }
}

/**
 * Implements template_preprocess_breadcrumb().
 */
function unl_fourone_preprocess_breadcrumb(&$variables) {
  $group = unl_fourone_get_current_group();

  array_unshift($variables['breadcrumb'], [
    'text' => 'Nebraska',
    'url' => 'http://www.unl.edu/',
  ]);

  // Replace the home breadcrumb for group
  if ($group) {
    // @todo: There should probably be a way to inject "intermediate" crumbs

    $variables['breadcrumb'][1] = [
      'text' => $group->title->value,
      'url' => $group->toUrl()->toString(),
    ];

    if (unl_fourone_is_request_group_front()) {
      unset($variables['breadcrumb'][2]);
    }
  }
}

/**
 * Implements template_preprocess_field().
 */
function unl_fourone_preprocess_field(&$variables) {
  $element = $variables['element'];
  if ($element['#field_name'] == 'field_hero_link') {
    foreach ($variables['items'] as $key => $item) {
      $variables['items'][$key]['content']['#options']['attributes']['class'] = array(
        'wdn-button',
        'wdn-button-outline'
      );
    }
  }
}

function unl_fourone_preprocess_webform_composite_address(&$variables) {
  $containerKey = array_search('container', $variables['element']['#theme_wrappers']);

  if (in_array('fieldset', $variables['element']['#theme_wrappers']) && $containerKey !== false) {
    unset($variables['element']['#theme_wrappers'][$containerKey]);
  }
}

/**
 * Safely get the og.context, if og is enabled
 *
 * @return Drupal\og\OgContextInterface
 */
function unl_fourone_get_current_group() {
  $moduleHandler = \Drupal::service('module_handler');
  if (!$moduleHandler->moduleExists('og')) {
    return NULL;
  }

  $ogContext = \Drupal::service('og.context');
  return $ogContext->getGroup();
}

/**
 * Returns if the current requested node is also the og.context
 * (group front)
 * @return bool
 */
function unl_fourone_is_request_group_front() {
  $group = unl_fourone_get_current_group();
  $node = \Drupal::request()->attributes->get('node');
  if ($group && $node && $group->nid->value == $node->nid->value) {
    return TRUE;
  }

  return FALSE;
}
